<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css">
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

<style>
  .pill-radio {
    display: none;
  }

  .pill-label {
    display: inline-block;
    padding: 10px 20px;
    margin: 5px;
    border-radius: 25px;
    background-color: #f0f0f0;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .pill-radio:checked + .pill-label {
    background-color: #007bff;
    color: white;
  }

  .pill-label:hover {
    background-color: #e0e0e0;
  }

  .pill-label.pill-disabled {
    background-color: #d3d3d3;
    text-decoration: line-through;
  }
</style>
{% assign selected_variant = product.selected_or_first_available_variant %}

<div class="container">
  <div class="swiper">
    <div class="swiper-wrapper">
      {% for media in product.media %}
        <div class="swiper-slide">
          <div>
            {% render 'product-media', media: media %}
          </div>
        </div>
      {% endfor %}
    </div>
    <div class="swiper-pagination"></div>
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>

  <div class="product--information sticky top-5 p-2">
    {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
      <input type="hidden" name="id" value="{{ selected_variant.id }}">
      <div>
        <span>{{ product.vendor }}</span>
      </div>

      <div>
        <h1>{{ product.title }}</h1>
      </div>

      <div id="price-{{ section.id }}">
        <span>{{ selected_variant.compare_at_price | money }}</span>
        <span>{{ selected_variant.price | money }}</span>

        {% if selected_variant.price < selected_variant.compare_at_price %}
          <span>Sale</span>
        {% endif %}
      </div>

      <div>
        {% unless product.has_only_default_variant %}
          <variant-selector data-url="{{ product.url}}" data-section="{{ section.id }}">
            {% for option in product.options_with_values %}
              <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

              <fieldset>
                <select
                  style="width: 200px; height: 30px;"
                  name="options[{{ option.name | escape }}]"
                  id="Option-{{ section.id }}-{{ forloop.index0 }}"
                >
                  {% for value in option.values %}
                    <option
                      value="{{ value | escape }}"
                      {% if option.selected_value == value %}
                        selected="selected"
                      {% endif %}
                      {% unless value.available %}
                        disabled
                      {% endunless %}
                    >
                      {{ value }}
                    </option>
                  {% endfor %}
                </select>
              </fieldset>
            {% endfor %}

            <br>
            <br>
            <br>
            <br>
            <br>
            <br>

            {%- for option in product.options_with_values -%}
              <fieldset>
                <legend>{{ option.name }}</legend>
                {%- for value in option.values -%}
                  <input
                    type="radio"
                    id="{{ option.name }}-{{ option.position }}-{{ forloop.index0 -}}"
                    name="{{ option.name }}-{{ option.position }}"
                    value="{{ value | escape }}"
                    class="pill-radio {% unless value.available %}disabled{% endunless %}"
                    {% if value.selected %}
                      checked
                    {% endif %}
                    data-option-value-id="{{ value.id }}"
                  >
                  <label
                    class="pill-label {% unless value.available %}pill-disabled{% endunless %}"
                    for="{{ option.name }}-{{ option.position }}-{{ forloop.index0 -}}"
                  >
                    {{ value }}
                  </label>
                {%- endfor -%}
              </fieldset>
            {%- endfor -%}

            <script type="application/json">
              {{ product.variants | json }}
            </script>
          </variant-selector>
        {% endunless %}
      </div>

      <div class="my-3">
        <label for="Quantity-{{ section.id }}">Quantity</label>

        <div class="my-2">
          <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1">
        </div>
      </div>

      <div>
        <p>{{ product.description }}</p>
      </div>

      <div>
        <button
          id="AddToCart-{{ section.id }}"
          type="submit"
          name="add"
          {% if selected_variant.available == false %}
            disabled
          {% endif %}
        >
          {% if selected_variant.available == false %}
            Sold out
          {% else %}
            Add to cart
          {% endif %}
        </button>
      </div>
    {% endform %}
  </div>
</div>
<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener('change', this.onVariantChange);
    }

    onVariantChange(e) {
      this.getSelectedOptions();
      this.getSelectedVariant();
      this.updateURL();

      if (this.currentVariant) {
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      //this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
      this.options = Array.from(this.querySelectorAll('fieldset input:checked')).map((element) => element.value);
      console.log('this.options', this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      console.log('Variants: ', this.variantData);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });
    }

    updateURL() {
      if (this.currentVariant) {
        window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
      } else {
        window.history.replaceState({}, '', `${this.dataset.url}`);
      }
    }

    updateFormID() {
      const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(`price-${this.dataset.section}`);
          const newPrice = html.getElementById(`price-${this.dataset.section}`);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;

          const oldVariantSelector = document.querySelector('variant-selector');
          const newVariantSelector = html.querySelector('variant-selector');

          if (oldVariantSelector && newVariantSelector) oldVariantSelector.innerHTML = newVariantSelector.innerHTML;

          const oldSubmitButton = document.getElementById(`AddToCart-${this.dataset.section}`);
          const newSubmitButton = html.getElementById(`AddToCart-${this.dataset.section}`);

          if (oldSubmitButton && newSubmitButton) oldSubmitButton.replaceWith(newSubmitButton);
        });
    }
  }

  customElements.define('variant-selector', VariantSelector);
</script>
<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',

    pagination: {
      el: '.swiper-pagination',
    },

    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },
  });
</script>
