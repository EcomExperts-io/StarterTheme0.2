<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css">
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

<style>
  .pill-radio {
    display: none;
  }

  .pill-label {
    display: inline-block;
    padding: 10px 20px;
    margin: 5px;
    border-radius: 25px;
    background-color: #f0f0f0;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .pill-radio:checked + .pill-label {
    background-color: #007bff;
    color: white;
  }

  .pill-label:hover {
    background-color: #e0e0e0;
  }

  .pill-label.pill-disabled {
    background-color: #d3d3d3;
    text-decoration: line-through;
  }
</style>
{% assign selected_variant = product.selected_or_first_available_variant %}

<product-info class="container" data-url="{{ product.url}}" data-section="{{ section.id }}">
  <div class="swiper">
    <div class="swiper-wrapper">
      {% assign selected_media_index = 0 %}
      {% for media in product.media %}
        {% liquid
          if selected_variant.featured_media.id == media.id
            assign selected_media_index = forloop.index0
          endif
        %}
        <div
          class="swiper-slide"
          data-media-id="{{ media.id }}"
          data-media-index="{{ forloop.index0 }}"
        >
          {% render 'product-media', media: media %}
        </div>
      {% endfor %}
    </div>
    <div class="swiper-pagination"></div>
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>

  <div class="product--information sticky top-5 p-2">
    {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
      <input type="hidden" name="id" value="{{ selected_variant.id }}">
      <div>
        <span>{{ product.vendor }}</span>
      </div>

      <div>
        <h1>{{ product.title }}</h1>
      </div>

      <div id="price-{{ section.id }}">
        <span>{{ selected_variant.compare_at_price | money }}</span>
        <span>{{ selected_variant.price | money }}</span>

        {% if selected_variant.price < selected_variant.compare_at_price %}
          <span>Sale</span>
        {% endif %}
      </div>

      <div>
        {% unless product.has_only_default_variant %}
          <variant-selector>
            {% for option in product.options_with_values %}
              <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

              <fieldset>
                <select
                  style="width: 200px; height: 30px;"
                  name="options[{{ option.name | escape }}]"
                  id="Option-{{ section.id }}-{{ forloop.index0 }}"
                >
                  {% for value in option.values %}
                    <option
                      value="{{ value | escape }}"
                      data-option-value-id="{{ value.id }}"
                      {% if value.selected %}
                        selected="selected"
                      {% endif %}
                      {% unless value.available %}
                        style="color: red; text-decoration: line-through;"
                      {% endunless %}
                    >
                      {{ value }}
                      {% unless value.available %}
                        Unavailable
                      {% endunless %}
                    </option>
                  {% endfor %}
                </select>
              </fieldset>
            {% endfor %}

            <br>
            <br>
            <br>
            <br>
            <br>
            <br>

            {%- for option in product.options_with_values -%}
              <fieldset>
                <legend>{{ option.name }}</legend>
                {%- for value in option.values -%}
                  <input
                    type="radio"
                    id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 -}}"
                    name="{{ option.name }}-{{ option.position }}"
                    value="{{ value | escape }}"
                    class="pill-radio {% unless value.available %}disabled{% endunless %}"
                    {% if value.selected %}
                      checked
                    {% endif %}
                    data-product-url="{{ value.product_url }}"
                    data-option-value-id="{{ value.id }}"
                  >
                  <label
                    class="pill-label {% unless value.available %}pill-disabled{% endunless %}"
                    for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 -}}"
                  >
                    {{ value }}
                  </label>
                {%- endfor -%}
              </fieldset>
            {%- endfor -%}

            <script type="application/json" data-variants>
              {{ product.variants | json }}
            </script>
          </variant-selector>
        {% endunless %}
      </div>

      <div>
        <label for="Quantity-{{ section.id }}">Quantity</label>
        <quantity-selector>
          <button name="minus" type="button">-</button>
          <input
            id="Quantity-{{ section.id }}"
            type="number"
            name="quantity"
            data-cart-quantity="{{ cart | item_count_for_variant: selected_variant.id }}"
            min="{{ selected_variant.quantity_rule.min }}"
            {% if selected_variant.quantity_rule.max != null %}
              max="{{ selected_variant.quantity_rule.max }}"
            {% endif %}
            step="{{ selected_variant.quantity_rule.increment }}"
            value="1"
          >
          <button name="plus" type="button">+</button>
        </quantity-selector>
      </div>

      <div>
        <p>{{ product.description }}</p>
      </div>

      <div>
        <button
          id="AddToCart-{{ section.id }}"
          type="submit"
          name="add"
          {% if selected_variant == null or selected_variant.available == false %}
            disabled
          {% endif %}
        >
          {% if selected_variant == null %}
            Unavailable
          {% elsif selected_variant.available == false %}
            Sold out
          {% else %}
            Add to cart
          {% endif %}
        </button>
      </div>
    {% endform %}
  </div>
</product-info>
<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',
    initialSlide: {{ selected_media_index }},
    pagination: {
      el: '.swiper-pagination',
    },
    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },
  });
</script>

<script>
  class ProductInfo extends HTMLElement {
    constructor() {
      super();
      console.log('ProductInfo', {{ product | json }});
      this.variantSelector.addEventListener('change', this.onVariantChange.bind(this));
      this.quantitySelector.addEventListener('change', this.onQuantitySelectorEvent.bind(this));
      this.quantitySelector.querySelector('button[name="plus"]').addEventListener('click', this.onQuantitySelectorEvent.bind(this));
      this.quantitySelector.querySelector('button[name="minus"]').addEventListener('click', this.onQuantitySelectorEvent.bind(this));

    }

    get variantSelector() {
      return this.querySelector('variant-selector');
    }

    get quantitySelector() {
      return this.querySelector('quantity-selector');
    }

    onVariantChange(e) {
      this.updateSelectedOptions(e.target.tagName);
      this.updateCurrentVariant();
      this.updateUrl();
      this.updateFormID();
      this.renderSection();
      this.updateSwiperSlide();
    }

    updateSwiperSlide() {
      if (this.currentVariant) {
        var media = this.currentVariant.featured_media?.id;
        var index = this.querySelector(`.swiper-slide[data-media-id="${media}"]`).dataset.mediaIndex;
        swiper.slideTo(index);
      }
    }

    onQuantitySelectorEvent(e) {
      const quantityInput = this.quantitySelector.querySelector('input[type="number"]');
      let currentValue = parseInt(quantityInput.value);
      const minValue = parseInt(quantityInput.getAttribute('min')) || 0;
      const maxValue = parseInt(quantityInput.getAttribute('max')) || Infinity;
    
      if (event.target.name === 'minus' && currentValue > minValue) {
        quantityInput.value = currentValue - 1;
      } else if (event.target.name === 'plus' && currentValue < maxValue) {
        quantityInput.value = currentValue + 1;
      } else if (event.type === 'change') {
        if (currentValue < minValue) {
          quantityInput.value = minValue;
        } else if (currentValue > maxValue) {
          quantityInput.value = maxValue;
        }
      }
    }

    updateSelectedOptions(tagName) {
      if (tagName === 'SELECT') {
        this.options = Array.from(this.variantSelector.querySelectorAll('select'), (select) => select.value);
        this.selectedOptionValues = Array.from(this.variantSelector.querySelectorAll('select'))
          .map((select) => select.options[select.selectedIndex].dataset.optionValueId)
          .join(',');
      } else {
        this.options = Array.from(this.variantSelector.querySelectorAll('fieldset input:checked')).map((element) => element.value);
        this.selectedOptionValues = Array.from(this.variantSelector.querySelectorAll('fieldset input:checked'))
          .map((element) => element.dataset.optionValueId)
          .join(',');
      }

      console.log('this.selectedOptionValues', this.selectedOptionValues);
    }

    getVariants() {
      this.variantData = this.variantData || JSON.parse(this.variantSelector.querySelector('[data-variants]').textContent);
      return this.variantData;
    }

    updateCurrentVariant() {
      this.currentVariant = this.getVariants().find((variant) => {
        const findings = !variant.options
          .map((option, index) => {
            return this.options[index] === option;
          })
          .includes(false);

        if (findings) return variant;
      });
      console.log('this.currentVariant', this.currentVariant);
    }

    updateUrl() {
      if (this.currentVariant) {
        window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
      } else {
        window.history.replaceState({}, '', `${this.dataset.url}`);
      }
    }

    updateFormID() {
      const form_input = this.querySelector('#product-form').querySelector('input[name="id"]');
      form_input.value = this.currentVariant ? this.currentVariant.id : '';
    }

    renderSection() {
      fetch(`${this.dataset.url}?option_values=${this.selectedOptionValues}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(`price-${this.dataset.section}`);
          const newPrice = html.getElementById(`price-${this.dataset.section}`);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;

          const oldVariantSelector = document.querySelector('variant-selector');
          const newVariantSelector = html.querySelector('variant-selector');

          if (oldVariantSelector && newVariantSelector) oldVariantSelector.innerHTML = newVariantSelector.innerHTML;

          const oldSubmitButton = document.getElementById(`AddToCart-${this.dataset.section}`);
          const newSubmitButton = html.getElementById(`AddToCart-${this.dataset.section}`);

          if (oldSubmitButton && newSubmitButton) oldSubmitButton.replaceWith(newSubmitButton);
        });
    }
  }

  customElements.define('product-info', ProductInfo);
</script>
