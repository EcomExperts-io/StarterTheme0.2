{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>
  .breadcrumb {
    margin-bottom: 20px;
  }

  h1 {
    margin-bottom: 10px;
  }

  .results-count {
    color: #666;
    margin-bottom: 20px;
  }

  .filters {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 20px;
  }

  .filter {
    background-color: #f0f0f0;
    padding: 5px 10px;
    border-radius: 20px;
    display: flex;
    align-items: center;
  }

  .filter-close {
    margin-left: 5px;
    cursor: pointer;
  }

  .main-content {
    display: flex;
    flex-direction: column;
  }

  .sidebar {
    width: 100%;
    margin-bottom: 20px;
  }

  .filter-section {
    margin-bottom: 20px;
  }

  .filter-section h3 {
    margin-bottom: 10px;
    padding-top: 15px;
    border-top: 1px solid #ccc;
  }

  .filter-section input[type='range'] {
    width: 100%;
  }

  .price-range {
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
  }

  .price-input {
    width: 60px;
  }

  .product-grid-container {
    width: 100%;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 20px;
  }

  .product-card {
    border: 1px solid #e0e0e0;
    padding: 10px;
  }

  .product-image {
    width: 100%;
    height: 350px;
    object-fit: cover;
    margin-bottom: 10px;
  }

  @media (min-width: 576px) {
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .product-brand {
    font-size: 0.9em;
    color: #666;
  }

  .product-name {
    font-weight: bold;
    margin: 5px 0;
  }

  .product-price {
    font-weight: bold;
  }

  .product-original-price {
    text-decoration: line-through;
    color: #666;
    margin-right: 5px;
  }

  .pagination {
    display: flex;
    justify-content: center;
    padding: 20px 0;
  }

  .pagination a {
    color: #007bff;
    padding: 8px 16px;
    text-decoration: none;
    border: 1px solid #ddd;
    margin: 0 4px;
    border-radius: 4px;
  }

  .pagination a:hover {
    background-color: #ddd;
  }

  .controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  .sort-dropdown {
    position: relative;
    display: inline-block;
  }

  .sort-button {
    background-color: #007bff;
    color: white;
    padding: 10px;
    border: none;
    cursor: pointer;
    border-radius: 4px;
  }

  .sort-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
  }

  .sort-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
  }

  .sort-content a:hover {
    background-color: #f1f1f1;
  }

  .sort-dropdown:hover .sort-content {
    display: block;
  }

  @media (min-width: 768px) {
    .main-content {
      flex-direction: row;
    }

    .sidebar {
      width: 250px;
      margin-right: 20px;
      flex-shrink: 0;
    }

    .product-grid {
      flex: 1;
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .product-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
</style>
<style>
  .color-swatches {
    display: flex;
    gap: 5px;
    margin-top: 10px;
  }

  .color-swatch {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 1px solid #ccc;
  }
</style>
{% liquid
  assign collapse_filters = section.settings.collapse_filters
%}
{% comment %} class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }} page-width" {% endcomment %}
<div class="container section-{{ section.id }}-padding" id="ProductGridContainer">
  <h1>{{ collection.title }}</h1>
  <div class="main-content">
    {%- paginate collection.products by section.settings.products_per_page -%}
      {%- if section.settings.enable_filtering -%}
        <aside class="sidebar">
          {% for f in collection.filters %}
            <div class="filter-section">
              <h3 class="collapsible {% if collapse_filters %}active{% endif %}" 
                  id="{{ f.param_name }}" 
                  onclick="toggleFilterCollapse(event)">
                {{ f.label }}
                {% if f.active_values.size > 0 %}
                  ({{ f.active_values.size }})
                  <a
                    data-render-section-url="{{ f.url_to_remove }}"
                    href="{{ f.url_to_remove }}"
                    >reset
                  </a>
                {% endif %}
              </h3>
              <div style="{% if collapse_filters %}display: none{% else %}display: block{% endif %}">
                {% for v in f.values %}
                  <label>
                    <input
                      type="checkbox"
                      {% if v.active %}
                        checked
                        data-render-section-checkbox-url="{{ v.url_to_remove }}"
                      {% else %}
                        data-render-section-checkbox-url="{{ v.url_to_add }}"
                      {% endif -%}
                      {% if v.count == 0 and v.active == false %}
                        disabled
                      {% endif -%}
                    >
                    {{- v.label }} ({{ v.count }})</label
                  ><br>
                {% endfor %}
              </div>
            </div>
          {% endfor %}
        </aside>
      {% endif %}
      <div class="product-grid-container">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <div class="controls">
          {%- if section.settings.enable_sorting -%}
            <div class="sort-dropdown">
              <button class="sort-button">Sort By</button>
              <div class="sort-content">
                {%- for option in collection.sort_options -%}
                  <a
                    {% if option.value == sort_by %}
                      style="font-weight: bold"
                    {% endif %}
                    href="#"
                    onclick="event.preventDefault(); sortBy('{{ option.value }}');"
                  >
                    {{- option.name | escape -}}
                  </a>
                {%- endfor -%}
              </div>
            </div>
          {%- endif -%}
        </div>

        <div class="filters">
          {% liquid
            assign has_active_filters = false
            for f in collection.filters
              if f.active_values.size > 0
                assign has_active_filters = true
              endif
            endfor
          %}
          {% if has_active_filters %}
            <div class="filter">
              Clear all filters
              <span class="filter-close" data-render-section-url="{{ collection.url }}"  >×</span>
            </div>
          {% endif %}

          {%- for f in collection.filters -%}
            {% for v in f.active_values %}
              <div class="filter">
                {{ f.label | escape }}: {{ v.label | escape -}}
                <span class="filter-close" 
                      data-render-section-url="{{ v.url_to_remove }}">×
                </span>
              </div>
            {% endfor %}
          {%- endfor -%}
        </div>
        <div class="results-count">
          {%- if collection.products_count == collection.all_products_count -%}
            {{ collection.products_count }} products
          {% else %}
            {{ collection.products_count }} of {{ collection.all_products_count }}
          {% endif %}
        </div>
        <div class="product-grid">
          {%- if collection.products.size == 0 -%}
            <p>Nothing Here</p>
          {%- else -%}
            {%- for product in collection.products -%}
              <div class="product-card">
                <img
                  src="{{ product.featured_image | image_url: width: 533 }}"
                  alt="{{ product.title }}"
                  class="product-image"
                  width="{{ product.featured_image.width }}"
                  height="{{ product.featured_image.height }}"
                >
                {% if section.settings.show_vendor %}
                  <div class="product-brand">{{ product.vendor }}</div>
                {% endif %}
                  
                <div class="product-name">{{ product.title }}</div>
                {% comment %} <div class="color-swatches">
                  {%- for variant in product.variants -%}
                    <span id="{{ variant.id }}" class="color-swatch" style="background-color: {{ variant.title | handleize }}"></span>
                  {%- endfor -%}
                </div> {% endcomment %}
                <div class="product-price">
                  <span class="product-original-price">{{ product.price_max | money }}</span>
                  {{ product.compare_at_price | money }}
                </div>
              </div>
            {%- endfor -%}
          {%- endif -%}
        </div>
        {%- if paginate.pages > 1 -%}
          {% comment %} {% render 'pagination', paginate: paginate, anchor: '' %} {% endcomment %}
          <div class="pagination">
            {%- if paginate.parts.size > 0 -%}
              {%- if paginate.previous -%}
                <a
                  href="{{ paginate.previous.url }}{{ anchor }}"
                  data-render-section-url="{{ paginate.previous.url }}"
                  aria-label="{{ 'general.pagination.previous' | t }}">
                  <span><<</span>
                </a>
              {%- endif -%}

              {%- for part in paginate.parts -%}
                {%- if part.is_link -%}
                  <a
                    href="{{ part.url }}{{ anchor }}"
                    data-render-section-url="{{ part.url }}"
                    aria-label="{{ 'general.pagination.page' | t: number: part.title }}"
                  >
                    {{- part.title -}}
                  </a>
                {%- else -%}
                  {%- if part.title == paginate.current_page -%}
                    <a
                      role="link"
                      aria-disabled="true"
                      style="font-weight: bold; color: red"
                      aria-current="page"
                      aria-label="{{ 'general.pagination.page' | t: number: part.title }}"
                    >
                      {{- part.title -}}
                    </a>
                  {%- else -%}
                    <span>{{ part.title }}</span>
                  {%- endif -%}
                {%- endif -%}
              {%- endfor -%}

              {%- if paginate.next -%}
                <a
                  href="{{ paginate.next.url }}{{ anchor }}"
                  data-render-section-url="{{ paginate.next.url }}"
                  aria-label="{{ 'general.pagination.next' | t }}"
                >
                  <span>>></span>
                </a>
              {%- endif -%}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    {%- endpaginate -%}
  </div>
</div>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const container = document.getElementById("ProductGridContainer");
    container.addEventListener("change", (event) => {
      if (event.target.matches('[data-render-section-checkbox-url]')) {
        renderSection(event.target.dataset.renderSectionCheckboxUrl);
      }
    });
    
    container.addEventListener("click", (event) => {
      if (event.target.matches('[data-render-section-url]')) {
        event.preventDefault();
        renderSection(event.target.dataset.renderSectionUrl);
      }
    });
  })
  

  {% if section.settings.enable_filtering %}

    class FiltersState {
      filters = [];
      update = (open, id) => {
        let filter = this.filters.find(f => f.id === id);
        if (filter) {
          filter.open = open;
        } else {  
          this.filters.push({ id: id, open: open });
        }
      }
    }

    let state = new FiltersState();

    toggleFilterCollapse = (event) => {
      
      event.target.classList.toggle('active');
      var content = event.target.nextElementSibling;
      if (content) {

        if (content.style.display === 'block') {
          state.update(false, event.target.id);
          content.style.display = 'none';
        } else {
          state.update(true, event.target.id);
          content.style.display = 'block';
        }
      }
    }

  {% endif %}

  {% if section.settings.enable_sorting %}
    sortBy = (sortBy) => {
      var url = new URL(window.location.href);
      url.searchParams.set('sort_by', sortBy);
      url.searchParams.delete('page');
      renderSection(url.href);
    }
  {% endif %}

  renderSection = (url) => {
    fetch(url)
      .then((response) => response.text())
      .then((responseText) => {
        history.pushState({}, '', url);
        let responseHtml = new DOMParser().parseFromString(responseText, 'text/html');
        
        {% if section.settings.enable_filtering %}
          state.filters.forEach(f => {
            let element = responseHtml.getElementById(f.id);
            if (element) {
              if (f.open) {
                element.nextElementSibling.style.display = 'block';
                element.classList.add('active');
              } else {
                element.nextElementSibling.style.display = 'none';
                element.classList.remove('active');
              }
            }
          });
        {% endif %}

        let html = responseHtml.getElementById('ProductGridContainer').innerHTML;
        document.getElementById('ProductGridContainer').innerHTML = html;
      });
  }
</script>
++
{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "info": "t:sections.main-collection-product-grid.settings.quick_add.info",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        },
        {
          "value": "bulk",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_3"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "collapse_filters",
      "default": true,
      "label": "Collapse filters by default"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
